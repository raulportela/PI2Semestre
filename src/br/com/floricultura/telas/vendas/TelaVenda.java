/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.floricultura.telas.vendas;

import br.com.floricultura.db.dao.DaoVenda;
import br.com.floricultura.model.cliente.Cliente;
import br.com.floricultura.model.produto.Produto;
import br.com.floricultura.model.venda.ItemVendido;
import br.com.floricultura.model.venda.Venda;
import br.com.floricultura.servico.ServicoVenda;
import br.com.floricultura.servico.ServicoCliente;
import br.com.floricultura.servico.ServicoProduto;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raul.pportela
 */
public class TelaVenda extends javax.swing.JInternalFrame {

    private int idVenda = 0;

    ItemVendido itensVenda = new ItemVendido();

    private float valorTotal = 0.00f;

    ArrayList<ItemVendido> itemVendido = new ArrayList();

    private Cliente cliente;

    private Produto produto, produtoCarrinho;

    public TelaVenda() {
        initComponents();
        camposProduto(false);
        
    }

    public void camposProduto(boolean adicionado) {
        if (adicionado) {
            lblCamposProduto.setVisible(false);
        }
        fieldCodProduto.setEnabled(adicionado);
        buttonPesquisarProduto.setEnabled(adicionado);
        fieldDescProduto.setEnabled(adicionado);
        fieldQuantidade.setEnabled(adicionado);
        fieldValorUnitario.setEnabled(adicionado);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelVendas = new javax.swing.JPanel();
        lblCodProduto = new javax.swing.JLabel();
        lblDescProduto = new javax.swing.JLabel();
        lblQuantidade = new javax.swing.JLabel();
        lblValorUnitario = new javax.swing.JLabel();
        lblNomeCliente = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        lblValorTotal = new javax.swing.JLabel();
        lblReais = new javax.swing.JLabel();
        lblEstoque = new javax.swing.JLabel();
        lblCpfCliente = new javax.swing.JLabel();
        lblNumeroCupom = new javax.swing.JLabel();
        fieldCodProduto = new javax.swing.JTextField();
        fieldDescProduto = new javax.swing.JTextField();
        fieldQuantidade = new javax.swing.JTextField();
        fieldValorUnitario = new javax.swing.JTextField();
        fieldNomeCliente = new javax.swing.JTextField();
        fieldValorTotal = new javax.swing.JTextField();
        fieldCpf = new javax.swing.JTextField();
        fieldEstoque = new javax.swing.JTextField();
        fieldNumeroCupum = new javax.swing.JTextField();
        TabelaVendas = new javax.swing.JScrollPane();
        TabelaVendas2 = new javax.swing.JTable();
        buttonInserirItem = new javax.swing.JButton();
        buttonPesquisarCPF = new javax.swing.JButton();
        buttonExcluirItem = new javax.swing.JButton();
        buttonCancelarVenda = new javax.swing.JButton();
        buttonConcluirvenda = new javax.swing.JButton();
        buttonPesquisarProduto = new javax.swing.JButton();
        lblCamposProduto = new javax.swing.JLabel();
        fieldDataCompra = new javax.swing.JFormattedTextField();

        setClosable(true);
        setTitle("Vendas");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        painelVendas.setBackground(new java.awt.Color(240, 240, 255));

        lblCodProduto.setText("Cod Produto");

        lblDescProduto.setText("Descrição Produto");

        lblQuantidade.setText("Quantidade");

        lblValorUnitario.setText("Valor Unitário (R$)");

        lblNomeCliente.setText("Nome Cliente");

        lblData.setText("Data");

        lblValorTotal.setText("Valor Total");

        lblReais.setText("R$");

        lblEstoque.setText("Estoque");

        lblCpfCliente.setText("CPF");

        lblNumeroCupom.setText("Numero Nota Fiscal");

        fieldCodProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCodProdutoActionPerformed(evt);
            }
        });

        fieldDescProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldDescProdutoActionPerformed(evt);
            }
        });

        fieldQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldQuantidadeActionPerformed(evt);
            }
        });

        fieldValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldValorTotalActionPerformed(evt);
            }
        });

        fieldCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldCpfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldCpfFocusLost(evt);
            }
        });

        fieldNumeroCupum.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        fieldNumeroCupum.setForeground(new java.awt.Color(255, 0, 51));

        TabelaVendas2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod Produto", "Descrição", "Quantidade", "Valor Unitário (R$)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaVendas.setViewportView(TabelaVendas2);

        buttonInserirItem.setText("Inserir Item");
        buttonInserirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInserirItemActionPerformed(evt);
            }
        });

        buttonPesquisarCPF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lupa 1.png"))); // NOI18N
        buttonPesquisarCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPesquisarCPFActionPerformed(evt);
            }
        });

        buttonExcluirItem.setText("Excluir Item");
        buttonExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirItemActionPerformed(evt);
            }
        });

        buttonCancelarVenda.setText("Cancelar Venda");
        buttonCancelarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarVendaActionPerformed(evt);
            }
        });

        buttonConcluirvenda.setText("Concluir Venda");
        buttonConcluirvenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConcluirvendaActionPerformed(evt);
            }
        });

        buttonPesquisarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lupa 1.png"))); // NOI18N
        buttonPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPesquisarProdutoActionPerformed(evt);
            }
        });

        lblCamposProduto.setForeground(new java.awt.Color(240, 0, 0));
        lblCamposProduto.setText("Para ativar campos de produto, insira um cliente.");

        fieldDataCompra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        fieldDataCompra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldDataCompraFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldDataCompraFocusLost(evt);
            }
        });

        javax.swing.GroupLayout painelVendasLayout = new javax.swing.GroupLayout(painelVendas);
        painelVendas.setLayout(painelVendasLayout);
        painelVendasLayout.setHorizontalGroup(
            painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelVendasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TabelaVendas)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelVendasLayout.createSequentialGroup()
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCpfCliente)
                            .addGroup(painelVendasLayout.createSequentialGroup()
                                .addComponent(fieldCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonPesquisarCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fieldNomeCliente)
                            .addGroup(painelVendasLayout.createSequentialGroup()
                                .addComponent(lblNomeCliente)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNumeroCupom)
                            .addComponent(fieldNumeroCupum, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelVendasLayout.createSequentialGroup()
                        .addComponent(buttonExcluirItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelVendasLayout.createSequentialGroup()
                                .addComponent(buttonCancelarVenda)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonConcluirvenda))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(painelVendasLayout.createSequentialGroup()
                                    .addComponent(lblReais)
                                    .addGap(6, 6, 6)
                                    .addComponent(fieldValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lblValorTotal))))
                    .addGroup(painelVendasLayout.createSequentialGroup()
                        .addComponent(fieldDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCamposProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonInserirItem))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelVendasLayout.createSequentialGroup()
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(painelVendasLayout.createSequentialGroup()
                                .addComponent(lblData)
                                .addGap(406, 406, 406))
                            .addGroup(painelVendasLayout.createSequentialGroup()
                                .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(painelVendasLayout.createSequentialGroup()
                                        .addComponent(fieldCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblCodProduto))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDescProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fieldDescProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4)
                                .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblQuantidade))))
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelVendasLayout.createSequentialGroup()
                                .addComponent(lblEstoque)
                                .addGap(40, 40, 40)
                                .addComponent(lblValorUnitario)
                                .addGap(0, 37, Short.MAX_VALUE))
                            .addGroup(painelVendasLayout.createSequentialGroup()
                                .addComponent(fieldEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fieldValorUnitario)))))
                .addContainerGap())
        );
        painelVendasLayout.setVerticalGroup(
            painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelVendasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelVendasLayout.createSequentialGroup()
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNomeCliente, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCpfCliente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonPesquisarCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(fieldCpf)))
                    .addGroup(painelVendasLayout.createSequentialGroup()
                        .addComponent(lblNumeroCupom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fieldNumeroCupum)
                            .addComponent(fieldNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelVendasLayout.createSequentialGroup()
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCodProduto)
                            .addComponent(lblValorUnitario)
                            .addComponent(lblDescProduto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fieldValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fieldEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fieldCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fieldDescProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(buttonPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(painelVendasLayout.createSequentialGroup()
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblQuantidade)
                            .addComponent(lblEstoque))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonInserirItem)
                    .addComponent(lblCamposProduto)
                    .addComponent(fieldDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabelaVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelVendasLayout.createSequentialGroup()
                        .addComponent(buttonExcluirItem)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelVendasLayout.createSequentialGroup()
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelVendasLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fieldValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblReais)))
                            .addComponent(lblValorTotal))
                        .addGap(7, 7, 7)
                        .addGroup(painelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonConcluirvenda)
                            .addComponent(buttonCancelarVenda))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelVendas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldDescProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldDescProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldDescProdutoActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        //NOTA FISCAL
        fieldNumeroCupum.setEditable(false);
        String notaFiscal = DaoVenda.gerarNumeroNota();
        fieldNumeroCupum.setText(notaFiscal);

        //DATA 
        fieldDataCompra.setEditable(false);
        String dataFormatada;
        SimpleDateFormat fo = new SimpleDateFormat("dd/MM/yyyy");
        Date data = new Date();
        dataFormatada = fo.format(data);
        fieldDataCompra.setText(dataFormatada);

        //
        fieldEstoque.setEditable(false);

    }//GEN-LAST:event_formInternalFrameOpened

    private void buttonPesquisarCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPesquisarCPFActionPerformed

        if (fieldCpf.getText().length() == 14) {
            try {
                cliente = ServicoCliente.procurarCliente(fieldCpf.getText()); //MOCK
                // cliente = DaoCliente.procurar(fieldCpf.getText());          //DAO Erro ao buscar pelo CPF  
                registrarCliente(cliente);
                fieldCpf.setEditable(false);
            } catch (Exception ex) {
                Logger.getLogger(TelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (fieldCpf.getText().equals("") || fieldCpf.getText() == null) {
            DialogListarCliente listarCliente = new DialogListarCliente(new javax.swing.JFrame(), true);
            listarCliente.setVisible(true);
            registrarCliente(listarCliente.getClienteV());
        }
    }//GEN-LAST:event_buttonPesquisarCPFActionPerformed

    private void buttonCancelarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarVendaActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCancelarVendaActionPerformed

    private void buttonPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPesquisarProdutoActionPerformed
        if (fieldCodProduto.getText() != null && !fieldCodProduto.getText().equals("")) {
            try {
                produto = ServicoProduto.procurarProduto(Integer.parseInt(fieldCodProduto.getText()));
            } catch (Exception ex) {
                Logger.getLogger(TelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
            registrarProduto(produto);
        } else if (fieldCodProduto.getText().equals("") || fieldCodProduto.getText() == null) {
            DialogListarProduto listarProduto = new DialogListarProduto(new javax.swing.JFrame(), true);
            listarProduto.setVisible(true);
            registrarProduto(listarProduto.getProdutoV());
        }
    }//GEN-LAST:event_buttonPesquisarProdutoActionPerformed

    private void buttonInserirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInserirItemActionPerformed
        inserirItem(produtoCarrinho, itensVenda);
    }//GEN-LAST:event_buttonInserirItemActionPerformed

    private void fieldCodProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCodProdutoActionPerformed
        if (fieldCodProduto == null) {
            try {
                List<Produto> listaProdutos = ServicoProduto.listar(); //MOCK
                //List<Produto> listaProdutos = DaoProduto.listar();  //DAO

            } catch (Exception ex) {
                Logger.getLogger(TelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                Produto produtoV = ServicoProduto.procurarProduto(Integer.parseInt(fieldCodProduto.getText())); 
                fieldDescProduto.setText(getProduto().getDescricao());
                fieldValorUnitario.setText(produtoV.getValorUnitario());

            } catch (NumberFormatException ex) {
                Logger.getLogger(TelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(TelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_fieldCodProdutoActionPerformed

    private void buttonExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirItemActionPerformed
        excluirItem();
    }//GEN-LAST:event_buttonExcluirItemActionPerformed

    private void fieldValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldValorTotalActionPerformed


    }//GEN-LAST:event_fieldValorTotalActionPerformed

    private void fieldCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldCpfFocusLost
        if (fieldCpf.getText() != null && fieldCpf.getText().length() == 11) {
            String CPF = fieldCpf.getText();
            String CpfS = "";
            CpfS += CPF.substring(0, 3) + ".";
            CpfS += CPF.substring(3, 6) + ".";
            CpfS += CPF.substring(6, 9) + "-";
            CpfS += CPF.substring(9, 11);
            fieldCpf.setText(CpfS);
        } else if (!fieldCpf.getText().equals("") && (fieldCpf.getText().length() != 11
                && fieldCpf.getText().length() != 14)) {
            fieldCpf.setText(null);
            fieldCpf.setBorder(new LineBorder(Color.RED));
        }

    }//GEN-LAST:event_fieldCpfFocusLost

    private void fieldCpfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldCpfFocusGained
        if (fieldCpf.getText() != null && fieldCpf.getText().length() == 14) {
            String cpf = fieldCpf.getText().substring(0, 3)
                    + fieldCpf.getText().substring(4, 7)
                    + fieldCpf.getText().substring(8, 11)
                    + fieldCpf.getText().substring(12, 14);
            fieldCpf.setBorder(new LineBorder(Color.LIGHT_GRAY));
            fieldCpf.setText(cpf);
        } else if (fieldCpf.getText() != null && (fieldCpf.getText().length() < 14
                || fieldCpf.getText().length() > 14)) {
            fieldCpf.setBorder(new LineBorder(Color.LIGHT_GRAY));
        }
    }//GEN-LAST:event_fieldCpfFocusGained

    private void buttonConcluirvendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConcluirvendaActionPerformed
        Venda venda = new Venda();
        venda.setCliente(getCliente());
        
        
        venda.setListaItensVendidos(itemVendido);
        
        venda.setNotaFiscal(fieldNumeroCupum.getText());
        
        Date dataConvertida = (Date) fieldDataCompra.getValue();
        venda.setData(dataConvertida);
        venda.setValorTotal(""+ valorTotal);
        String resposta = null;
        
        
        try { 
            resposta = ServicoVenda.venda(venda);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        if (resposta == null){
            JOptionPane.showMessageDialog(rootPane, "Venda concluída com sucesso.");
            this.dispose();
        }else {
            JOptionPane.showMessageDialog(rootPane, resposta);
        }
    }//GEN-LAST:event_buttonConcluirvendaActionPerformed

    private void fieldQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldQuantidadeActionPerformed

    private void fieldDataCompraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldDataCompraFocusLost
        if (fieldDataCompra.getText() != null && fieldDataCompra.getText().length() == 8) {
            String dataS = "";
            dataS += fieldDataCompra.getText().substring(0, 2) + "/";
            dataS += fieldDataCompra.getText().substring(2, 4) + "/";
            dataS += fieldDataCompra.getText().substring(4, 8);
            fieldDataCompra.setText(dataS);
        } else if (fieldDataCompra.getText() != null && (fieldDataCompra.getText().length() != 8
            && fieldDataCompra.getText().length() != 10)) {
        fieldDataCompra.setBorder(new LineBorder(Color.RED));
        }
    }//GEN-LAST:event_fieldDataCompraFocusLost

    private void fieldDataCompraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldDataCompraFocusGained
        if (fieldDataCompra.getText() != null && fieldDataCompra.getText().length() != 10) {
            fieldDataCompra.setText(null);
            fieldDataCompra.setBorder(new LineBorder(Color.LIGHT_GRAY));
        }
    }//GEN-LAST:event_fieldDataCompraFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane TabelaVendas;
    private javax.swing.JTable TabelaVendas2;
    private javax.swing.JButton buttonCancelarVenda;
    private javax.swing.JButton buttonConcluirvenda;
    private javax.swing.JButton buttonExcluirItem;
    private javax.swing.JButton buttonInserirItem;
    private javax.swing.JButton buttonPesquisarCPF;
    private javax.swing.JButton buttonPesquisarProduto;
    private javax.swing.JTextField fieldCodProduto;
    private javax.swing.JTextField fieldCpf;
    private javax.swing.JFormattedTextField fieldDataCompra;
    private javax.swing.JTextField fieldDescProduto;
    private javax.swing.JTextField fieldEstoque;
    private javax.swing.JTextField fieldNomeCliente;
    private javax.swing.JTextField fieldNumeroCupum;
    private javax.swing.JTextField fieldQuantidade;
    private javax.swing.JTextField fieldValorTotal;
    private javax.swing.JTextField fieldValorUnitario;
    private javax.swing.JLabel lblCamposProduto;
    private javax.swing.JLabel lblCodProduto;
    private javax.swing.JLabel lblCpfCliente;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblDescProduto;
    private javax.swing.JLabel lblEstoque;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JLabel lblNumeroCupom;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblReais;
    private javax.swing.JLabel lblValorTotal;
    private javax.swing.JLabel lblValorUnitario;
    private javax.swing.JPanel painelVendas;
    // End of variables declaration//GEN-END:variables

    private void inserirItem(Produto produto, ItemVendido itensVenda) {
        
        DefaultTableModel model
                = (DefaultTableModel) TabelaVendas2.getModel();
        Object[] row = new Object[4];
        row[0] = fieldCodProduto.getText();
        row[1] = fieldDescProduto.getText();
        row[2] = fieldQuantidade.getText();
        row[3] = fieldValorUnitario.getText();
        valorTotal += Float.parseFloat(fieldValorUnitario.getText()) * Integer.parseInt(fieldQuantidade.getText());
        fieldValorTotal.setText("" + valorTotal);
        
        model.addRow(row);

        itensVenda.setProduto(produto);
        itensVenda.setQtd(Integer.parseInt(fieldQuantidade.getText()));
        itemVendido.add(itensVenda);

        fieldCodProduto.setText(null);
        fieldDescProduto.setText(null);
        fieldValorUnitario.setText(null);
        fieldQuantidade.setText(null);
        fieldCodProduto.setEditable(true);
        fieldDescProduto.setEditable(true);
        fieldValorUnitario.setEditable(true);
    }

    private void excluirItem() {

        if (TabelaVendas2.getSelectedRow() >= 0) {

            final int row = TabelaVendas2.getSelectedRow();

            String nome = (String) TabelaVendas2.getValueAt(row, 1);
            String quantidade = (String) TabelaVendas2.getValueAt(row, 2);
            String valorUnitario = (String) TabelaVendas2.getValueAt(row, 3);
            int respostaConfirmacao = JOptionPane.showConfirmDialog(rootPane,
                    "Excluir produto: \"" + nome + "\"?",
                    "Confirmar exclusão", JOptionPane.YES_NO_OPTION);

            if (respostaConfirmacao == JOptionPane.YES_NO_OPTION) {
                valorTotal -= Float.parseFloat(valorUnitario) * Integer.parseInt(quantidade);
                fieldValorTotal.setText("" + valorTotal);
                DefaultTableModel dtmVenda = (DefaultTableModel) TabelaVendas2.getModel();
                dtmVenda.removeRow(row);

            }

        }

    }

    public float getValorTotal() {
        int rowsCount = TabelaVendas2.getRowCount();
        for (int i = 0; i < rowsCount; i++) {
            valorTotal = valorTotal + Float.parseFloat(TabelaVendas2.getValueAt(i, 3).toString());
            valorTotal *= Integer.parseInt(fieldQuantidade.getText());
        }
        return valorTotal;
    }

    /**
     * @return the cliente
     */
    public Cliente getCliente() {
        return cliente;
    }

    /**
     * @param cliente the cliente to set
     */
    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
        fieldCpf.setText(cliente.getCpf());
        fieldNomeCliente.setText(cliente.getNome() + " " + cliente.getSobrenome());
    }

    /**
     * @return the produto
     */
    public Produto getProduto() {
        return produto;
    }

    /**
     * @param produto the produto to set
     */
    public void setProduto(Produto produto) {
        this.produto = produto;
    }

    public void registrarCliente(Cliente cliente) {
        String cpf = "";
            cpf += cliente.getCpf().substring(0, 3) + ".";
            cpf += cliente.getCpf().substring(3, 6) + ".";
            cpf += cliente.getCpf().substring(6, 9) + "-";
            cpf += cliente.getCpf().substring(9, 11);
        fieldCpf.setText(cpf);
        fieldNomeCliente.setText(cliente.getNome() + " " + cliente.getSobrenome());
        fieldNomeCliente.setEditable(false);
        fieldCpf.setEditable(false);
        camposProduto(true);
        this.setCliente(cliente);
    }

    public void registrarProduto(Produto produto) { 
        produtoCarrinho = produto;
        fieldCodProduto.setText("" + produto.getIdProduto());
        fieldDescProduto.setText(produto.getProduto());
        fieldValorUnitario.setText(produto.getValorUnitario());
        fieldEstoque.setText(produto.getQuantidade());
        fieldDescProduto.setEditable(false);
        fieldCodProduto.setEditable(false);
    }

}
